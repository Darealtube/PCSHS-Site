import type { GetStaticProps, GetStaticPropsResult } from "next";
import Head from "next/head";
import AnnounceWidget from "../Components/Widget/AnnounceWidget";
import prisma from "../lib/prisma";
import { Announcement as AnnouncementType } from "../types/PrismaTypes";
import { Divider, Box } from "@mui/material";
import Announcement from "../Components/Announcement";

type Props = {
  announcements: AnnouncementType[];
};

const Home = ({ announcements }: Props) => {
  return (
    <>
      <Head>
        <title>PCSHS Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AnnounceWidget />
      <Divider sx={{ marginTop: "16px" }} />
      {announcements.map((announcement) => (
        <Box key={announcement.header}>
          <Announcement announcement={announcement} type="SSG" />
        </Box>
      ))}
    </>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async (): Promise<
  GetStaticPropsResult<Props>
> => {
  const announcements = await prisma.announcement.findMany({
    where: {
      OR: [{ type: "SSG Announcement" }, { type: "School Announcement" }],
    },
    select: {
      header: true,
      body: true,
      footer: true,
      image: true,
      video: true,
      date: true,
      author: {
        select: {
          image: true,
          name: true,
        },
      },
    },
    orderBy: [
      {
        date: "desc",
      },
    ],
  });
  const realAnnouncements = announcements.map((announcement) => ({
    ...announcement,
    date: JSON.stringify(announcement.date),
  }));
  return { props: { announcements: realAnnouncements } };
};
